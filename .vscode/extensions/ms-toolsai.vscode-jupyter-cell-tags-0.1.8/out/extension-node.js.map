{"version":3,"file":"extension-node.js","mappings":"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","sources":[".././src/cellTags.ts","../external commonjs \"vscode\"",".././src/json.ts",".././src/cellTagsTreeDataProvider.ts",".././src/helper.ts","../webpack/bootstrap",".././src/extension.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as vscode from 'vscode';\nimport * as json from './json';\n\nexport async function addCellTag(cell: vscode.NotebookCell, tags: string[]) {\n\tconst oldTags = cell.metadata.custom?.metadata?.tags ?? [];\n    const newTags: string[] = [];\n    for (const tag of tags) {\n        if (!oldTags.includes(tag)) {\n            newTags.push(tag);\n        }\n    }\n\tif (newTags.length) {\n\t\toldTags.push(...newTags);\n\t}\n\n\tconst cellMetadata = { ...cell.metadata };\n\tif (!cellMetadata.custom) {\n\t\tcellMetadata.custom = {};\n\t}\n\n\tif (!cellMetadata.custom.metadata) {\n\t\tcellMetadata.custom.metadata = {};\n\t}\n\n\tcellMetadata.custom.metadata.tags = oldTags;\n\n    // create workspace edit to update tag\n    const edit = new vscode.WorkspaceEdit();\n    const nbEdit = vscode.NotebookEdit.updateCellMetadata(cell.index, {\n        ...cellMetadata,\n    });\n    edit.set(cell.notebook.uri, [nbEdit]);\n    await vscode.workspace.applyEdit(edit);\n}\n\nexport class CellTagStatusBarProvider implements vscode.NotebookCellStatusBarItemProvider {\n\tprovideCellStatusBarItems(cell: vscode.NotebookCell, token: vscode.CancellationToken): vscode.ProviderResult<vscode.NotebookCellStatusBarItem[]> {\n\t\tconst items: vscode.NotebookCellStatusBarItem[] = [];\n\t\tcell.metadata.custom?.metadata?.tags?.forEach((tag: string) => {\n\t\t\titems.push({\n\t\t\t\ttext: '$(close) ' + tag,\n\t\t\t\ttooltip: tag,\n\t\t\t\tcommand: {\n\t\t\t\t\ttitle: `Remove Tag ${tag}`,\n\t\t\t\t\tcommand: 'jupyter-cell-tags.removeTag',\n\t\t\t\t\targuments: [cell, tag]\n\t\t\t\t},\n\t\t\t\talignment: vscode.NotebookCellStatusBarAlignment.Left,\n\t\t\t});\n\t\t});\n\n\t\tif (items.length) {\n\t\t\t// add insert tag status bar item\n\t\t\titems.push({\n\t\t\t\ttext: '$(plus) Tag',\n\t\t\t\ttooltip: 'Add Tag',\n\t\t\t\tcommand: {\n\t\t\t\t\ttitle: 'Add Tag',\n\t\t\t\t\tcommand: 'jupyter-cell-tags.addTag',\n\t\t\t\t\targuments: [cell]\n\t\t\t\t},\n\t\t\t\talignment: vscode.NotebookCellStatusBarAlignment.Left,\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n}\n\nexport function getActiveCell() {\n\t// find active cell\n\tconst editor = vscode.window.activeNotebookEditor;\n\tif (!editor) {\n\t\treturn;\n\t}\n\n\tif (editor.selections[0].start >= editor.notebook.cellCount) {\n\t\treturn;\n\t}\n\n\treturn editor.notebook.cellAt(editor.selections[0].start);\n}\n\nexport function reviveCell(args: vscode.NotebookCell | vscode.Uri | undefined): vscode.NotebookCell | undefined {\n\tif (!args) {\n\t\treturn getActiveCell();\n\t}\n\n\tif (args && 'index' in args && 'kind' in args && 'notebook' in args && 'document' in args) {\n        return args as vscode.NotebookCell;\n    }\n\n\tif (args && 'scheme' in args && 'path' in args) {\n\t\tconst cellUri = vscode.Uri.from(args);\n\t\tconst cellUriStr = cellUri.toString();\n\t\tlet activeCell: vscode.NotebookCell | undefined = undefined;\n\n\t\tfor (const document of vscode.workspace.notebookDocuments) {\n\t\t\tfor (const cell of document.getCells()) {\n\t\t\t\tif (cell.document.uri.toString() === cellUriStr) {\n\t\t\t\t\tactiveCell = cell;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (activeCell) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn activeCell;\n\t}\n\n\treturn undefined;\n}\n\nexport function register(context: vscode.ExtensionContext) {\n\tcontext.subscriptions.push(vscode.notebooks.registerNotebookCellStatusBarItemProvider('jupyter-notebook', new CellTagStatusBarProvider()));\n\tcontext.subscriptions.push(vscode.commands.registerCommand('jupyter-cell-tags.removeTag', async (cell: vscode.NotebookCell | string, tag: string) => {\n\t\tlet activeCell: vscode.NotebookCell | undefined;\n\t\tif (typeof cell === 'string') {\n\t\t\t// find active cell\n\t\t\tactiveCell = getActiveCell();\n\t\t\ttag = cell;\n\t\t} else {\n\t\t\tactiveCell = cell;\n\t\t}\n\n\t\tif (!activeCell) {\n\t\t\treturn;\n\t\t}\n\n        let tags = activeCell.metadata.custom.metadata.tags;\n        if (tags) {\n            // remove tag from tags\n            const index = tags.indexOf(tag);\n            if (index > -1) {\n                tags.splice(index, 1);\n            }\n            activeCell.metadata.custom.metadata.tags = tags;\n\n            // create workspace edit to update tag\n            const edit = new vscode.WorkspaceEdit();\n            const nbEdit = vscode.NotebookEdit.updateCellMetadata(activeCell.index, {\n                ...activeCell.metadata,\n            });\n            edit.set(activeCell.notebook.uri, [nbEdit]);\n            await vscode.workspace.applyEdit(edit);\n        } else {\n            return;\n        }\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('jupyter-cell-tags.addTag', async (cell: vscode.NotebookCell | vscode.Uri | undefined) => {\n\t\tcell = reviveCell(cell);\n\t\t\n\t\tif (!cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tag = await vscode.window.showInputBox({\n\t\t\tplaceHolder: 'Type to create a cell tag'\n\t\t});\n\n\t\tif (tag) {\n\t\t\tawait addCellTag(cell, [tag]);\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('jupyter-cell-tags.paramaterize', async (cell: vscode.NotebookCell | vscode.Uri | undefined) => {\n\t\tcell = reviveCell(cell);\n\t\tif (!cell) {\n\t\t\treturn;\n\t\t}\n\t\tawait addCellTag(cell, ['parameters']);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('jupyter-cell-tags.editTagsInJSON', async (cell: vscode.NotebookCell | vscode.Uri | undefined) => {\n\t\tcell = reviveCell(cell);\n\t\tif (!cell) {\n\t\t\treturn;\n\t\t}\n\t\tconst resourceUri = cell.notebook.uri;\n\t\tconst document = await vscode.workspace.openTextDocument(resourceUri);\n\t\tconst tree = json.parseTree(document.getText());\n\t\tconst cells = json.findNodeAtLocation(tree, ['cells']);\n\t\tif (cells && cells.children && cells.children[cell.index]) {\n\t\t\tconst cellNode = cells.children[cell.index];\n\t\t\tconst metadata = json.findNodeAtLocation(cellNode, ['metadata']);\n\t\t\tif (metadata) {\n\t\t\t\tconst tags = json.findNodeAtLocation(metadata, ['tags']);\n\t\t\t\tif (tags) {\n\t\t\t\t\tconst range = new vscode.Range(document.positionAt(tags.offset), document.positionAt(tags.offset + tags.length));\n\t\t\t\t\tawait vscode.window.showTextDocument(document, { selection: range, viewColumn: vscode.ViewColumn.Beside });\n\t\t\t\t} else {\n\t\t\t\t\tconst range = new vscode.Range(document.positionAt(metadata.offset), document.positionAt(metadata.offset + metadata.length));\n\t\t\t\t\tawait vscode.window.showTextDocument(document, { selection: range, viewColumn: vscode.ViewColumn.Beside });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst range = new vscode.Range(document.positionAt(cellNode.offset), document.positionAt(cellNode.offset + cellNode.length));\n\t\t\t\tawait vscode.window.showTextDocument(document, { selection: range, viewColumn: vscode.ViewColumn.Beside });\n\t\t\t}\n\t\t}\n\t}));\n}","module.exports = require(\"vscode\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequence of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0;\n\tconst len = text.length;\n\tlet value: string = '';\n\tlet tokenOffset = 0;\n\tlet token: SyntaxKind = SyntaxKind.Unknown;\n\tlet scanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u: {\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash: {\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t}\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (const segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object': {\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (const prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\t}\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral: {\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tconst _scanner = createScanner(text);\n\tconst parts: string[] = [];\n\tlet kind: SyntaxKind;\n\tlet offset = 0;\n\tlet pos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as vscode from 'vscode';\nimport { getCellTags } from './helper';\n\nexport class TagTreeDataProvider implements vscode.TreeDataProvider<string> {\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<void> = new vscode.EventEmitter<void>();\n\tonDidChangeTreeData: vscode.Event<void> = this._onDidChangeTreeData.event;\n\n\tprivate _tags: string[] = [];\n\tprivate _disposables: vscode.Disposable[] = [];\n\tprivate _editorDisposables: vscode.Disposable[] = [];\n\tconstructor() {\n\t\tthis._tags = [];\n\n\t\tthis._disposables.push(vscode.window.onDidChangeActiveNotebookEditor(e => {\n\t\t\tthis.registerEditorListeners(e);\n\t\t}));\n\n\t\tif (vscode.window.activeNotebookEditor) {\n\t\t\tthis.registerEditorListeners(vscode.window.activeNotebookEditor);\n\t\t}\n\t}\n\n\tprivate async registerEditorListeners(editor: vscode.NotebookEditor | undefined) {\n\t\tthis._editorDisposables.forEach(d => d.dispose());\n\n\t\tif (!editor) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (editor.notebook.notebookType !== 'jupyter-notebook') {\n\t\t\treturn;\n\t\t}\n\n\t\tawait vscode.commands.executeCommand('setContext', 'jupyter:showTagsExplorer', true);\n\n\t\tthis._editorDisposables = [];\n\t\tthis._editorDisposables.push(vscode.window.onDidChangeNotebookEditorSelection(e => {\n\t\t\tthis.updateTags(editor);\n\t\t}));\n\t\tthis._editorDisposables.push(vscode.workspace.onDidChangeNotebookDocument(e => {\n\t\t\tthis.updateTags(editor);\n\t\t}));\n\t\tthis.updateTags(editor);\n\t}\n\n\tprivate async updateTags(editor: vscode.NotebookEditor | undefined) {\n\t\t// clear if no editor\n\t\tif (!editor) {\n\t\t\tthis._tags = [];\n\t\t\tthis._onDidChangeTreeData.fire();\n\t\t\treturn;\n\t\t}\n\n\t\t// get active cell\n\t\tif (!editor.selections || !editor.selections[0]) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (editor.selections[0].start >= editor.notebook.cellCount) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activeCell = editor.notebook.cellAt(editor.selections[0].start);\n\t\tif (!activeCell) {\n\t\t\tthis._tags = [];\n\t\t\tthis._onDidChangeTreeData.fire();\n\t\t\treturn;\n\t\t}\n\n\t\t// get tags\n\t\tconst tags = getCellTags(activeCell);\n\t\tthis._tags = tags;\n\t\tthis._onDidChangeTreeData.fire();\n\t}\n\n\tgetTreeItem(element: string): vscode.TreeItem | Thenable<vscode.TreeItem> {\n\t\treturn {\n\t\t\tlabel: element,\n\t\t\tcollapsibleState: vscode.TreeItemCollapsibleState.None,\n\t\t};\n\t}\n\n\tgetChildren(element?: string | undefined): vscode.ProviderResult<string[]> {\n\t\tif (!element) {\n\t\t\treturn this._tags;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._editorDisposables.forEach(d => d.dispose());\n\t\tthis._disposables.forEach(d => d.dispose());\n\t}\n}\n\nexport function register(context: vscode.ExtensionContext) {\n\t// register tree view for tags on the sidebar\n\tconst treeDataProvider = new TagTreeDataProvider();\n\tcontext.subscriptions.push(vscode.window.registerTreeDataProvider('cell-tag', treeDataProvider));\n}","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as vscode from 'vscode';\n\nexport function getCellTags(cell: vscode.NotebookCell) {\n\treturn cell.metadata.custom?.metadata?.tags ?? [];\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport * as vscode from 'vscode';\nimport { register as registerCellTags } from './cellTags';\nimport { register as registerCellTagsView } from './cellTagsTreeDataProvider';\n\nexport function activate(context: vscode.ExtensionContext) {\n\tregisterCellTags(context);\n\tregisterCellTagsView(context);\n}\n\nexport function deactivate() {}\n"],"names":[],"sourceRoot":""}